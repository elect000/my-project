# This is a Bibtex reference
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:t arch:headline ^:nil
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:nil e:nil email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+TITLE: Statistic for fools design doc
#+DATE: 
#+AUTHOR: 情報科学類二年 江畑 拓哉(201611350)
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.5.1 (Org mode 9.1.1)
#+LATEX_CLASS: koma-article
#+LATEX_CLASS_OPTIONS: 
#+LATEX_HEADER_EXTRA: \bibliography{reference}
#+LaTeX_CLASS_OPTIONS:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+STARTUP: indent overview inlineimages

* 目的
  　機械学習を学習し始める人々に対して基礎的な定義式からボトムアップ的に統計・機械学習理論を理解するためのツールを作成することである。ツールはWebアプリとして制作する他、視覚的な要素があることや、使用したそれぞれの統計・機械学習手法についての解説がわかりやすく示されていることが望ましい。

* 背景
  　機械学習ツールを作成する、という初期目標を掲げ学習を行った結果多大な苦労があったため、学習成果を公開することで他の初学者の学習コストを低減させたいと考えたことにある。ここで言う多大な苦労とは、主に言語の壁の問題や参考文献の膨大さなどが挙げられる。

* 対応項目
  　今回は時系列解析手法の一つである、ARIMAモデル(ここにはSARIMA、AR、MA、ARMAモデルを含む）と回帰木についてのランダムフォレストについて解説・実行するためのWebアプリを作成する。
  　以下に対応項目をリスト形式で示す。尚、作成済みのものに関してはチェックをつける。また実装する機械学習に関する関数については以降に記載する仕様にて詳細に記述する。
  - [ ] 画面制御
  - [ ] アカウント制御
  - [%] 機械学習制御
    - [ ] 実行・パラメータ設定
    - [ ] 実行する機械学習についての解説の表示
    - [ ] 実行結果表示
  - [ ] 機械学習の実行
  - [ ] 実行結果出力制御
  - [ ] アカウントに紐付いた機械学習履歴の保存・呼び出し
  - [%] 統計・機械学習に関する関数
    - [ ] ARIMA
    - [ ] ランダムフォレスト

* 非対応項目
  　対応項目と同様にリスト形式で示す。
  - 多人数での実行結果の共有
    
* スケジュール
  　期末試験期間終了後である2017年12月29日から情報特別演習最終発表である2018年1月19日未明までを実装期間とする。
  　詳細な予定としては2017年12月31日までに統計・機械学習（対応項目で言う"統計・機械学習に関する関数"）に関しない実装を終わらせ、その後時間の許す限り統計・機械学習についての関数を実装していく予定である。

* 仕様
  　以下に詳細な仕様を、対応項目ごとに示していく。
  
** 画面制御
   　画面制御の関係図を以下に示した後、それぞれの画面の機能についての説明を行う。
   #+BEGIN_SRC text
   ・ホーム画面
   　<=>（(・サインイン未済=>サインイン・サインアップ画面
   　　　　・サインイン済み=>（アカウント制御画面||
   　　　　　　　　　　　　　　機械学習履歴画面||
   　　　　　　　　　　　　　　機械学習画面）)||
   　　　統計・機械学習解説インデックス画面）
   ・サインイン・サインアップ画面
   　<=>(サインイン画面||
   　　　サインアップ画面)
   ・アカウント制御画面
   　<=>（パスワード再設定画面||
   　　　アカウント削除画面||
   　　　Quandlキー設定画面）
   ・機械学習画面
   　<=>(パラメータ等設定画面||
   　　　機械学習実行画面)
   ・統計・機械学習解説インデックス画面
   　<=>（各々の解説画面）
   ・パラメーター等設定画面
   　<=>（データ設定画面||
   　　　機械学習手法選択画面）
   ・機械学習実行画面
   　<=>　実行結果画面
   ・実行結果画面
   　（・実行結果出力ボタンが押された=>　実行結果出力画面）
   　=> 　ホーム画面）
   ・機械学習履歴画面
   　<=>（各々の機械学習画面）
   #+END_SRC

   - ホーム画面
     　ホーム画面である。このWebアプリの概要に関する簡単な説明を行う。ルートはここに設定される。
   - サインイン・サインアップ画面
     　サインイン・サインアップ画面などへの遷移を行うための画面。プルダウンメニューなどで実装する可能性もある。
   - アカウント制御画面
     　アカウント制御に関する画面への遷移を行うための画面。プルダウンメニューなどで実装する可能性もある。
   - 機械学習履歴画面
     　アカウントに紐付けられた機械学習履歴を一覧表示する。表示する内容は、実行日時とデータ、パラメータである。
   - 機械学習画面
     　機械学習のパラメータ設定や実行に関する画面をまとめたもの。ここでARIMAやランダムフォレストなどの機械学習のタイプを選択する。
   - 統計・機械学習解説インデックス画面
     　蓄積してある統計・機械学習解説のインデックスを表示する。
   - サインイン画面
     　アカウント名とパスワードを認証してサインインをする。
   - サインアップ画面
     　一意になるアカウント名とパスワードを入れてアカウントを登録する。
   - パスワード再設定画面
     　以前のパスワードと新しいパスワードを用いてパスワードを再設定する。
   - アカウント削除画面
     　アカウントとパスワードを用いてアカウントを削除する。この際にこのアカウントに紐付けられた機械学習履歴も削除する。
   - Quandlキー設定画面
     　QuandlのAPIキーを設定する。テストとして例えば日経平均株価をQuandlから入手できるかを検査する。
   - パラメータ等設定画面
     　機械学習のデータなどのパラメータを設定するためのルートページである。ここでパラメータの確認を行うことができる。
   - 機械学習実行画面
     　機械学習を実行するための確認などを行うための画面、チェックボックスリストを作成し、例えば統計・機械学習に関する説明を追記するなどのオプションの有効・無効を設定できるようにする。
   - 各々の解説画面
     　指定されたキーワードと一致する単語の解説を表示する。解説文中のキーワードに関する単語の解説も表示できるようにする。
   - データ設定画面
     　機械学習のタイプに応じた個数のデータを設定する。
     　すでにアカウントの所持者がそのデータを取得している場合は、データベースからデータを読みだすようにする。つまりデータベースから呼び出し可能なキーを保持する。
     　データを取得しておらず、設定されたQuandlキーがある場合は、そのキーを用いてデータを取得し、アカウントに紐付けられたデータベースに保存する。そしてデータベースに保存した際に用いたキーを保持する。
     　データを取得しておらず、Quandlキーが設定されていない場合は、そのままデータを取得し、アカウントに紐付けられたデータベースに保存する。そしてデータベースに保存した際に用いたキーを保持する。
     　データを取得する際に取得できなかった場合にはエラー内容を記述したメッセージを表示する。
   - 機械学習手法選択画面
     　選択した機械学習のタイプに合わせたスロットを用意しておき、そこに任意の選択可能な検定やパラメータなどの値をセットできるようにする。``Exit''ボタンなどを作ることで、機械学習の処理を中断して、例えばある地点の検定結果までを実行できるようにする。
   - 実行結果画面
     　選択された機械学習のタイプ、パラメータを用いて実行した結果を表示する画面。タイプ、パラメータ、実行結果のPDFをアカウントに紐付けられたデータベースに保存する。
   - 実行結果出力画面
     　PDFに実行結果画面を出力した画面。これは別のタブやウィンドウなどで開かれるものとする。
   - 各々の機械学習画面
     　呼びだされたキーに対応した実行結果のPDFを表示する。
     
** アカウント制御画面
   　サーバとの通信を行い、データベースにそれぞれのアカウントに関するデータを保存する。
   　扱うデータは以下の通りである。
   - アカウント名(id)
     　ユーザごとに一意の値を取る識別子である。使用可能な文字は英数字のみとする。
   - パスワード(password)
     　長さは8文字以上16文字未満とする。使用可能な文字は英数字のみとする。
   - Quandlキー(q-key)
     　QuandlのAPIキーである。入力されたキーが正しいかどうかをサーバ側でテストする。このキーはいつでも変更可能なものとする。
   　利用するHTTPリクエストメソッドを以下に示す。但しここで示されるparameterはあくまで目安であり、実際のparameterには暗号化などの処理が行われる。

  #+ATTR_LATEX: :environment tabular :align |c|c|c|c|
  |--------------+--------------+------------------------+----------|
  | HTTP Request | method name  | parameter              | response |
  |--------------+--------------+------------------------+----------|
  | POST         | /register    | id, password           | 未定     |
  | POST         | /re-password | id, password, password | 未定     |
  | POST         | /login       |                        | 未定     |
  | POST         | /logout      |                        | 未定     |
  | POST         | /set-q-key   | q-key                  | 未定     |
  |--------------+--------------+------------------------+----------|
  
** 機械学習制御
*** 実行・パラメータ等設定
    　機械学習のタイプ、パラメータ、データを設定し、実行命令をサーバに送信する。
    　ARIMA、ランダムフォレストが選択可能な機械学習のタイプである。
    　処理は途中までの結果のみを出力できる。つまり各処理は次の処理を行うかそこで処理を終了するかを選択することができる。
    　それぞれのタイプにおけるデータ、パラメータを以下に示す。
**** ARIMA
     - データ
       1. 単一時系列データ
          　単一の時系列データを用いる。時系列の長さもここで設定する。
     - パラメータ
       　パラメータは処理と検定を合わせて自動的に設定できる部分を作成する。
       1. 定常化処理リスト
          　定常化を行う際の工程リストを示す。例えば、対数化や n 次階差、季節階差などがここに該当する。
       2. 定常化後検定パラメータ
          　定常化が行われているかを検定するためのパラメータ、例えば KPSSやADFなどの検定内容、有意水準などがここに該当する。
       3. AR(p)モデル値設定
          　AR(p) モデルの p の値を設定する。
       4. 推定
          　上で設定した p の値を使って推定を行う。ここには最尤推定などの推定手法をパラメータとして設定する。
       5. 検定
          　AICやBICなどを用いて分析がどの程度元データに近づけることができたかを検定する。
       6. MA(q)モデル値設定
          　MA(q) モデルの q の値を設定する。また、3,4,5工程を行わずにここに飛ぶことができるようにする。
       7. 推定
          　上で設定した q の値を使って推定を行う。ここには最尤推定などの推定手法をパラメータとして設定する。
       8. 検定
          　AICやBICなどを用いて分析がどの程度元データに近づけることができたかを検定する。
       9. 予測
          　作成したモデルを使って時系列予測を行う。どこまで予測するかをパラメータとして設定する。
**** ランダムフォレスト
     - データ
       1. 複数時系列データ
          　複数の時系列データを用いる。説明変数(複数)にあたる部分は目的変数(単一)を時系列的に広義に包含している必要がある。
     - パラメータ (1〜4のパラメータは必須であり途中で処理を止めることはできない)
       1. サンプルサイズ
          　ひとつのサンプルにおけるサイズをデータ全体から Q % という形で設定する。
       2. サンプル数
          　決定木の数を設定する。
       3. 分岐関数
          　分岐に用いる関数を設定する。例えばエントロピーやジニ係数がこれに該当する。
       4. 分岐深度
          　分岐を行う深さを設定する。
****  
     　これらのパラメータ元にHTTPリクエストを送りサーバーと通信を行う。利用するHTTPリクエストメソッドを以下に示す。但しここで示されるparametersは処理内容やパラメータを保存したjson形式のデータであり、Responseは実行結果を保存しているデータベース上のキーベクトルであるとする。
    
    #+ATTR_LATEX: :environment tabular :align |c|c|c|c|
  |--------------+--------------------+------------+----------|
  | HTTP Request | method name        | parameter  | response |
  |--------------+--------------------+------------+----------|
  | GET          | /arima/{account}   | parameters | Response |
  | GET          | /rforest/{account} | parameters | Response |
  |--------------+--------------------+------------+----------|
*** 実行する機械学習についての解説の表示
    　インデックスに収められた一意のキーを用いてサーバから解説データを取得しHTMLとして表示する。内容中の統計・機械学習に関するキーワードにはそれについてへのリンクが含まれている。
** 実行結果出力制御
   　渡されたデータベースへのアクセスキーのベクトルを用いて、実行結果を保存しているデータベース上からデータを呼び出し、その形式に応じて表示を行っていく。更にチェックボックス形式のオプション選択に応じてそれぞれの処理についての解説を表示する。
   　利用するHTTPリクエストメソッドを以下に示す。access-keyはデータベースへのアクセスキー、json-dataはjson形式のデータである。

  #+ATTR_LATEX: :environment tabular :align |c|c|c|c|
  |--------------+---------------------------+------------+-----------|
  | HTTP Request | method name               | parameter  | response  |
  |--------------+---------------------------+------------+-----------|
  | GET          | /get-graph/{account}      | access-key | json-data |
  | GET          | /get-param/{account}      | access-key | float     |
  | GET          | /get-param-list/{account} | access-key | json-data |
  |--------------+---------------------------+------------+-----------|
** 実行結果表示
   　実行結果出力制御から得られた設定やデータベースへのアクセスキーのベクトルを元に、サーバから受け取ったPDFファイルを表示する。これはユーザがファイルを保存してブラウザやその他のアプリケーションで開くものとする。
   　利用するHTTPリクエストメソッドを以下に示す。json-dataはデータベースへのアクセスキーと処理内容、その他のオプションなどを含んだjson形式のデータである。

  #+ATTR_LATEX: :environment tabular :align |c|c|c|c|
  |--------------+--------------------+-----------+----------|
  | HTTP Request | method name        | parameter | response |
  |--------------+--------------------+-----------+----------|
  | GET          | /get-pdf/{account} | json-data | pdf      |
  |--------------+--------------------+-----------+----------|

** アカウントに紐付いた機械学習履歴の保存・呼び出し
   　機械学習を行った実行結果を記したpdfに対してアカウントに紐付けた保存・呼び出しを行う。
   　利用するHTTPリクエストメソッドを以下に示す。keyはデータベース上のpdfを保存しているデータへのアクセスキーである。

  #+ATTR_LATEX: :environment tabular :align |c|c|c|c|
  |--------------+-------------------------+-----------+----------|
  | HTTP Request | method name             | parameter | response |
  |--------------+-------------------------+-----------+----------|
  | GET          | /get-past-pdf/{account} | key       | pdf      |
  |--------------+-------------------------+-----------+----------|

** アカウントに紐付いた元データの保存・呼び出し
   　機械学習制御で用いるデータを呼び出す際にはサーバ側で元となるデータがそのアカウントを含んでいるかを確認する。そのデータが呼び出したアカウントを含んでいればデータベースからデータを呼び出す。そうでなければQuandlからデータを呼び出す。
   　データは毎週更新され、それに応じてデータに紐付けられていたアカウントの情報はリセットされる。更新のタイミングはそのデータがその週最初に呼び出されてた時点である。
   　利用するHTTPリクエストメソッドを以下に示す。paramsはQuandlのデータへのアクセスのための名称と、欲しいデータの開始日時と終了日時を示したjson形式のデータ、keyはデータベースに保存された該当データへのキーである。

  #+ATTR_LATEX: :environment tabular :align |c|c|c|c|
  |--------------+-------------------------+-----------+----------|
  | HTTP Request | method name             | parameter | response |
  |--------------+-------------------------+-----------+----------|
  | GET          | /get-raw-data/{account} | params    | key      |
  |--------------+-------------------------+-----------+----------|
   
** 統計・機械学習に関する仕様

*** ARIMA
    
*** ランダムフォレスト

* 実装
  　実装すべき主要な関数については以下に示す。全ての関数の詳細は、別紙の実装する関数についてのAPIドキュメントに示す。

* セキュリティやプライバシーについて
  　HTTPS通信は実現可能であるか現状不明（SSL証明書を入手可能であるのかが不明）であるため、セキュリティの高いWebアプリを作成することは困難であると考えられる。プライバシーについてはアカウントについて独立の内容を提供しているため、プライバシーを侵す心配はないと考えられる。

* リスク
  　テストに多くの時間を割けないため、セッション維持などに関する問題や、過大なスケールの処理に対する処置が問題になることが考えられる。極力初期実装時に完璧なプログラムを作成する予定である。
* テスト計画
  　今のところ、テストを行う予定はない。

* 参考資料
* リポジトリ
  　2017年12月29日にgit@elect000アカウントに作成する予定である。
  
* 編集履歴
** DONE 第1回編集 [2017-12-18 月 17:02]
   CLOSED: [2017-12-18 月 17:02]
   　このファイルの作成、大まかな全体の設計に加え、画面制御に関する部分を編集した。
** DONE 第2回編集 [2017-12-19 火 04:17]
   CLOSED: [2017-12-19 火 04:17]
   　最後に実装する予定である機械学習についての部分を除いて全ての仕様を編集した。これにより、先述の部分と実装を除いた全ての項目を編集したことになり、これを第一計画としてプロジェクトの見直しを行う。尚、これ以上の大幅な編集は期末試験終了である2017年12月26日まで行わない。
